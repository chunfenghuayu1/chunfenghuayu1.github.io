import{_ as s,o as a,c as n,V as l}from"./chunks/framework.7cbf217e.js";const h=JSON.parse('{"title":"元素的显示与隐藏","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/CSS/基础/14-元素显示与隐藏.md","filePath":"front-end/CSS/基础/14-元素显示与隐藏.md","lastUpdated":1683117492000}'),o={name:"front-end/CSS/基础/14-元素显示与隐藏.md"},p=l(`<h1 id="元素的显示与隐藏" tabindex="-1">元素的显示与隐藏 <a class="header-anchor" href="#元素的显示与隐藏" aria-label="Permalink to &quot;元素的显示与隐藏&quot;">​</a></h1><p>类似网站广告,当我们点击关闭就不见了,但是我们重新刷新页面,会重新出现!</p><p>本质:让一个元素在页面中隐藏或者显示出来。</p><h2 id="display属性" tabindex="-1">display属性 <a class="header-anchor" href="#display属性" aria-label="Permalink to &quot;display属性&quot;">​</a></h2><p>display属性用于设置-个元索应如何显示</p><ul><li>display:none ; 隐藏对象</li><li>display: block ;除了转换为块级元索之外,同时还有显示元素的意思</li></ul><blockquote><p>display隐藏元素<strong>不再占有原来的位置</strong></p><p>后面应用及其广泛,搭配JS可以做很多的网页特效</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">block : CSS1　块对象的默认值。用该值为对象之后添加新行 </span></span>
<span class="line"><span style="color:#A6ACCD;">none : CSS1　隐藏对象。与visibility属性的hidden值不同，其不为被隐藏的对象保留其物理空间 </span></span>
<span class="line"><span style="color:#A6ACCD;">inline : CSS1　内联对象的默认值。用该值将从对象中删除行 </span></span>
<span class="line"><span style="color:#A6ACCD;">compact : CSS2　分配对象为块对象或基于内容之上的内联对象 </span></span>
<span class="line"><span style="color:#FFCB6B;">marker</span><span style="color:#A6ACCD;"> : CSS2　指定内容在容器对象之前或之后。要使用此参数，对象必须和:after及</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">before</span><span style="color:#A6ACCD;"> 伪元素一起使用 </span></span>
<span class="line"><span style="color:#FFCB6B;">inline-table</span><span style="color:#A6ACCD;"> : CSS2　将表格显示为无前后换行的内联对象或内联容器 </span></span>
<span class="line"><span style="color:#FFCB6B;">list-item</span><span style="color:#A6ACCD;"> : CSS1　将块对象指定为列表项目。并可以添加可选项目标志 </span></span>
<span class="line"><span style="color:#FFCB6B;">run-in</span><span style="color:#A6ACCD;"> : CSS2　分配对象为块对象或基于内容之上的内联对象 </span></span>
<span class="line"><span style="color:#FFCB6B;">table</span><span style="color:#A6ACCD;"> : CSS2　将对象作为块元素级的表格显示 </span></span>
<span class="line"><span style="color:#FFCB6B;">table-caption</span><span style="color:#A6ACCD;"> : CSS2　将对象作为表格标题显示 </span></span>
<span class="line"><span style="color:#FFCB6B;">table-cell</span><span style="color:#A6ACCD;"> : CSS2　将对象作为表格单元格显示 </span></span>
<span class="line"><span style="color:#FFCB6B;">table-column</span><span style="color:#A6ACCD;"> : CSS2　将对象作为表格列显示 </span></span>
<span class="line"><span style="color:#FFCB6B;">table-column-group</span><span style="color:#A6ACCD;"> : CSS2　将对象作为表格列组显示 </span></span>
<span class="line"><span style="color:#FFCB6B;">table-header-group</span><span style="color:#A6ACCD;"> : CSS2　将对象作为表格标题组显示 </span></span>
<span class="line"><span style="color:#FFCB6B;">table-footer-group</span><span style="color:#A6ACCD;"> : CSS2　将对象作为表格脚注组显示 </span></span>
<span class="line"><span style="color:#FFCB6B;">table-row</span><span style="color:#A6ACCD;"> : CSS2　将对象作为表格行显示 </span></span>
<span class="line"><span style="color:#FFCB6B;">table-row-group</span><span style="color:#A6ACCD;"> : CSS2　将对象作为表格行组显示</span></span></code></pre></div><h2 id="visibility可见性" tabindex="-1">visibility可见性 <a class="header-anchor" href="#visibility可见性" aria-label="Permalink to &quot;visibility可见性&quot;">​</a></h2><p>语法：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">visibility: inherit </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> visible </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> collapse </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> hidden</span></span></code></pre></div><p>参数：</p><p><strong>inherit :</strong> 继承上一个父对象的可见性</p><p><strong>visible :</strong> 对象可视</p><p><strong>hidden :</strong> 对象隐藏</p><p><strong>collapse :</strong> 主要用来隐藏表格的行或列。隐藏的行或列能够被其他内容使用。对于表格外的其他对象，其作用等同于hidden。IE5.5尚不支持此属性。</p><blockquote><p><strong>继续占有原来的位置</strong></p></blockquote><h2 id="overflow-溢出" tabindex="-1">overflow 溢出 <a class="header-anchor" href="#overflow-溢出" aria-label="Permalink to &quot;overflow 溢出&quot;">​</a></h2><p>语法：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">overflow : visible </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> auto </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> hidden </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> scroll</span></span></code></pre></div><p>参数：</p><p><strong>visible :</strong> 不剪切内容也不添加滚动条。假如显式声明此默认值，对象将被剪切为包含对象的window或frame的大小。并且<a href="mk:MSITStore:C:%5CUsers%5C%E6%98%A5%E9%A3%8E%E5%8C%96%E9%9B%A8%5CDesktop%5Chtml_css_material-master%5Ccss2.0%E4%B8%AD%E6%96%87%E6%89%8B%E5%86%8C.chm::/css2/c_clip.html%3E" target="_blank" rel="noreferrer">clip</a>属性设置将失效</p><p><strong>auto :</strong> 此为body对象和textarea的默认值。在需要时剪切内容并添加滚动条</p><p><strong>hidden :</strong> 不显示超过对象尺寸的内容</p><p><strong>scroll :</strong> 总是显示滚动条</p><blockquote><p>默认是visible，即溢出显示</p></blockquote><p>一般情况下 ,我们都不想让溢出的内容显示出来.因为溢出的部分会影响布局。</p><p>但是如果有定位的盒子，<strong>请慎用overflow:hidden</strong>因为它会隐藏多余的部分。</p>`,28),e=[p];function t(r,c,i,C,d,y){return a(),n("div",null,e)}const S=s(o,[["render",t]]);export{h as __pageData,S as default};
