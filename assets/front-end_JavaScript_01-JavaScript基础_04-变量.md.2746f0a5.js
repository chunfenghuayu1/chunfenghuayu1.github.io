import{_ as a,o as s,c as n,V as e}from"./chunks/framework.7cbf217e.js";const l="/assets/image-20220412004949618.00f45857.png",A=JSON.parse('{"title":"变量","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/JavaScript/01-JavaScript基础/04-变量.md","filePath":"front-end/JavaScript/01-JavaScript基础/04-变量.md","lastUpdated":1683117492000}'),t={name:"front-end/JavaScript/01-JavaScript基础/04-变量.md"},p=e(`<h1 id="变量" tabindex="-1">变量 <a class="header-anchor" href="#变量" aria-label="Permalink to &quot;变量&quot;">​</a></h1><h2 id="变量概述" tabindex="-1">变量概述 <a class="header-anchor" href="#变量概述" aria-label="Permalink to &quot;变量概述&quot;">​</a></h2><h3 id="什么是变量" tabindex="-1">什么是变量 <a class="header-anchor" href="#什么是变量" aria-label="Permalink to &quot;什么是变量&quot;">​</a></h3><p>变量是用于存放数据的<strong>容器</strong>。我们通过<strong>变量名</strong>获取数据，甚至数据可以修改</p><p>本质：变量是程序在<strong>内存</strong>中申请一块用来存放数据的空间</p><h2 id="变量的使用" tabindex="-1">变量的使用 <a class="header-anchor" href="#变量的使用" aria-label="Permalink to &quot;变量的使用&quot;">​</a></h2><p>变量在使用时分为两步：1.声明变量 2.赋值</p><ol><li><p>声明变量</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">//声明变量</span></span>
<span class="line"><span style="color:#A6ACCD;">var age; //声明一个名称为age的变量</span></span></code></pre></div><p>==var== 是一个JS关键字，用来声明变量( variable 变量的意思 )。使用该关键字声明变量后，计算机会自动为变量分配内存空间，不需要程序员管</p><p>age是程序员定义的变量名，我们要通过变量名来访问内存中分配的空间</p></li><li><p>赋值</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">age = 10; //给age这个变量赋值为10</span></span></code></pre></div><p>两种声明赋值方法</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">、声明</span><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">赋值</span><span style="color:#89DDFF;">==&gt;</span><span style="color:#A6ACCD;">输出</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 1.声明age变量</span></span>
<span class="line"><span style="color:#A6ACCD;">        var age;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 2.赋值 把值存入变量中</span></span>
<span class="line"><span style="color:#A6ACCD;">        age = 10;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 3.输出结果</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(age);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">、初始化</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 变量初始化</span></span>
<span class="line"><span style="color:#A6ACCD;">        var name = &#39;pink&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(name);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div></li></ol><h2 id="变量的语法扩展" tabindex="-1">变量的语法扩展 <a class="header-anchor" href="#变量的语法扩展" aria-label="Permalink to &quot;变量的语法扩展&quot;">​</a></h2><h3 id="更新变量" tabindex="-1">更新变量 <a class="header-anchor" href="#更新变量" aria-label="Permalink to &quot;更新变量&quot;">​</a></h3><p>一个变量被重新复赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准。</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">81</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">//最后的结果就是81因为18被覆盖掉了</span></span></code></pre></div><h3 id="同时声明多个变量" tabindex="-1">同时声明多个变量 <a class="header-anchor" href="#同时声明多个变量" aria-label="Permalink to &quot;同时声明多个变量&quot;">​</a></h3><p>同时声明多个变量时，只需要写一个 var， 多个变量名之间使用英文逗号隔开。</p><h4 id="声明变量的特殊情况" tabindex="-1">声明变量的特殊情况 <a class="header-anchor" href="#声明变量的特殊情况" aria-label="Permalink to &quot;声明变量的特殊情况&quot;">​</a></h4><table><thead><tr><th style="text-align:center;">情况</th><th style="text-align:center;">说明</th><th style="text-align:center;">结果</th></tr></thead><tbody><tr><td style="text-align:center;">var age ; console.log (age);</td><td style="text-align:center;">只声明 不赋值</td><td style="text-align:center;">undefined</td></tr><tr><td style="text-align:center;">console.log(age)</td><td style="text-align:center;">不声明 不赋值 直接使用</td><td style="text-align:center;">报错</td></tr><tr><td style="text-align:center;">age = 10; console.log (age);</td><td style="text-align:center;">不声明 只赋值</td><td style="text-align:center;">10</td></tr></tbody></table><h2 id="变量命名规范" tabindex="-1">变量命名规范 <a class="header-anchor" href="#变量命名规范" aria-label="Permalink to &quot;变量命名规范&quot;">​</a></h2><p>由字母(A-Za-z)、数字(0-9)、下划线(_)、美元符号( $ )组成，如：usrAge, num01, _name</p><p>严格区分大小写。var app; 和 var App; 是两个变量</p><p>不能以数字开头。 18age 是==错误==的</p><p>不能是关键字、保留字。例如：var、for、while</p><p>变量名必须有意义。 MMD BBD nl → age</p><p>遵守驼峰命名法。首字母小写，后面单词的首字母需要大写。 myFirstName</p><p>推荐翻译网站： 有道 爱词霸</p><p><img src="`+l+`" alt="image-20220412004949618"></p><h2 id="交换变量值" tabindex="-1">交换变量值 <a class="header-anchor" href="#交换变量值" aria-label="Permalink to &quot;交换变量值&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        var age = 18;</span></span>
<span class="line"><span style="color:#A6ACCD;">        var myAge = 81;</span></span>
<span class="line"><span style="color:#A6ACCD;">         temp = age;</span></span>
<span class="line"><span style="color:#A6ACCD;">         age = myAge;</span></span>
<span class="line"><span style="color:#A6ACCD;">         myAge = temp;</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(age,myAge);</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,27),o=[p];function r(c,i,d,y,g,C){return s(),n("div",null,o)}const D=a(t,[["render",r]]);export{A as __pageData,D as default};
