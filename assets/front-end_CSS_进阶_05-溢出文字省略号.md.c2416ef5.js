import{_ as s,o as a,c as n,V as l}from"./chunks/framework.7cbf217e.js";const A=JSON.parse('{"title":"溢出的文字省略号显示","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/CSS/进阶/05-溢出文字省略号.md","filePath":"front-end/CSS/进阶/05-溢出文字省略号.md","lastUpdated":1683117492000}'),t={name:"front-end/CSS/进阶/05-溢出文字省略号.md"},e=l(`<h1 id="溢出的文字省略号显示" tabindex="-1">溢出的文字省略号显示 <a class="header-anchor" href="#溢出的文字省略号显示" aria-label="Permalink to &quot;溢出的文字省略号显示&quot;">​</a></h1><h2 id="单行文本溢出显示省略号" tabindex="-1"><strong>单行文本溢出显示省略号</strong> <a class="header-anchor" href="#单行文本溢出显示省略号" aria-label="Permalink to &quot;**单行文本溢出显示省略号**&quot;">​</a></h2><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*必须满足三个条件*/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*1.先强制-行内显示文本*/</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">white-space</span><span style="color:#A6ACCD;">: nowrap; ( 默认normal自动换行)</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*2.超出的部分隐藏*/</span></span>
<span class="line"><span style="color:#A6ACCD;">	overflow: hidden;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*3.文字用省略号替代超出的部分*/</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">text-overflow</span><span style="color:#A6ACCD;">: ellipsis;</span></span></code></pre></div><h2 id="多行文本溢出显示省略号" tabindex="-1"><strong>多行文本溢出显示省略号</strong> <a class="header-anchor" href="#多行文本溢出显示省略号" aria-label="Permalink to &quot;**多行文本溢出显示省略号**&quot;">​</a></h2><blockquote><p>有较大兼容性问题，适合于webKit浏览器或移动端(移动端大部分是webkit内核)</p></blockquote><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/*如下设置*/</span><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">	overflow: hidden;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">text-overflow</span><span style="color:#A6ACCD;">: ellipsis;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*+弹性伸缩盒子模型显示+*/</span></span>
<span class="line"><span style="color:#A6ACCD;">	display: -webkit-box; </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*限制在一一个块元店显示的文本的行数+*/</span></span>
<span class="line"><span style="color:#A6ACCD;">	-webkit- </span><span style="color:#FFCB6B;">line-clamp</span><span style="color:#A6ACCD;">: 2;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*+设置或检索伸缩盒对象的子元素的排列方式*/</span></span>
<span class="line"><span style="color:#A6ACCD;">	-webkit- </span><span style="color:#FFCB6B;">box-</span><span style="color:#A6ACCD;"> orient: vertical;</span></span></code></pre></div><blockquote><ul><li><p><strong>要限制盒子高度</strong></p></li><li><p><strong>更推荐让后台人员来做这个效果，因为后台人员可以设置显示多少个字，操作更简单</strong></p></li></ul></blockquote>`,7),o=[e];function p(c,i,r,d,C,y){return a(),n("div",null,o)}const h=s(t,[["render",p]]);export{A as __pageData,h as default};
