import{_ as t,o as a,c as e,V as n}from"./chunks/framework.7cbf217e.js";const _=JSON.parse('{"title":"事件基础","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/JavaScript/04-JavaScript进阶之DOM技术/03-事件基础.md","filePath":"front-end/JavaScript/04-JavaScript进阶之DOM技术/03-事件基础.md","lastUpdated":1683117492000}'),s={name:"front-end/JavaScript/04-JavaScript进阶之DOM技术/03-事件基础.md"},l=n(`<h1 id="事件基础" tabindex="-1">事件基础 <a class="header-anchor" href="#事件基础" aria-label="Permalink to &quot;事件基础&quot;">​</a></h1><h2 id="事件概述" tabindex="-1">事件概述 <a class="header-anchor" href="#事件概述" aria-label="Permalink to &quot;事件概述&quot;">​</a></h2><p>JavaScript 使我们有能力创建动态页面，而事件是可以被 JavaScript 侦测到的行为。</p><p>简单理解： 触发--响应机制。</p><p>网页中的每个元素都可以产生某些可以触发 JavaScript 的事件，例如，我们可以在用户点击某按钮时产生一个事件，然后去执行某些操作。</p><h2 id="事件三要素" tabindex="-1">事件三要素 <a class="header-anchor" href="#事件三要素" aria-label="Permalink to &quot;事件三要素&quot;">​</a></h2><p>1.事件源</p><p>2.事件类型</p><p>3.事件处理程序</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    // 点击一个按钮，弹出对话框</span></span>
<span class="line"><span style="color:#A6ACCD;">    // 1. 事件是有三部分组成  事件源  事件类型  事件处理程序   我们也称为事件三要素</span></span>
<span class="line"><span style="color:#A6ACCD;">    //(1) 事件源 事件被触发的对象   谁  按钮</span></span>
<span class="line"><span style="color:#A6ACCD;">    var btn = document.getElementById(&#39;btn&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">    //(2) 事件类型  如何触发 什么事件 比如鼠标点击(onclick) 还是鼠标经过 还是键盘按下</span></span>
<span class="line"><span style="color:#A6ACCD;">    //(3) 事件处理程序  通过一个函数赋值的方式 完成</span></span>
<span class="line"><span style="color:#A6ACCD;">    btn.onclick = function() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">alert</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">点秋香</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="执行事件的步骤" tabindex="-1">执行事件的步骤 <a class="header-anchor" href="#执行事件的步骤" aria-label="Permalink to &quot;执行事件的步骤&quot;">​</a></h2><p>1.获取事件源</p><p>2.注册事件(绑定事件)</p><p>3.添加事件处理程序(采用函数赋值形式)</p><h2 id="常见的鼠标事件" tabindex="-1">常见的鼠标事件 <a class="header-anchor" href="#常见的鼠标事件" aria-label="Permalink to &quot;常见的鼠标事件&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">鼠标事件</th><th style="text-align:center;">触发条件</th></tr></thead><tbody><tr><td style="text-align:center;">onclick</td><td style="text-align:center;">鼠标点击左键触发</td></tr><tr><td style="text-align:center;">onmouseover</td><td style="text-align:center;">鼠标经过触发</td></tr><tr><td style="text-align:center;">onmouseout</td><td style="text-align:center;">鼠标离开触发</td></tr><tr><td style="text-align:center;">onfocus</td><td style="text-align:center;">获得鼠标焦点触发</td></tr><tr><td style="text-align:center;">onblur</td><td style="text-align:center;">失去鼠标焦点触发</td></tr><tr><td style="text-align:center;">onmousemove</td><td style="text-align:center;">鼠标移动触发</td></tr><tr><td style="text-align:center;">onmouseup</td><td style="text-align:center;">鼠标弹起触发</td></tr><tr><td style="text-align:center;">onmousedown</td><td style="text-align:center;">鼠标按下触发</td></tr></tbody></table>`,16),r=[l];function o(p,c,i,d,y,h){return a(),e("div",null,r)}const u=t(s,[["render",o]]);export{_ as __pageData,u as default};
