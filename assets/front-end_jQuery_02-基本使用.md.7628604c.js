import{_ as a,o as e,c as s,V as n}from"./chunks/framework.7cbf217e.js";const D=JSON.parse('{"title":"jQuery基本使用","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/jQuery/02-基本使用.md","filePath":"front-end/jQuery/02-基本使用.md","lastUpdated":1683117492000}'),o={name:"front-end/jQuery/02-基本使用.md"},l=n(`<h1 id="jquery基本使用" tabindex="-1">jQuery基本使用 <a class="header-anchor" href="#jquery基本使用" aria-label="Permalink to &quot;jQuery基本使用&quot;">​</a></h1><p>官网地址:<a href="https://jquery.com/" target="_blank" rel="noreferrer">jQuery</a></p><p>版本:</p><ul><li>1x:兼容IE678等低版本浏览器,官网不再更新</li><li>2x:不兼容IE678等低版本浏览器,官网不再更新</li><li>3x:不兼容IE678,主要更新版本</li></ul><h2 id="jquery的入口函数" tabindex="-1">jQuery的入口函数 <a class="header-anchor" href="#jquery的入口函数" aria-label="Permalink to &quot;jQuery的入口函数&quot;">​</a></h2><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">		</span><span style="color:#676E95;font-style:italic;">//此处是页面DOM加载完成的入口</span></span>
<span class="line"><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(document)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ready</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">	</span><span style="color:#89DDFF;">...</span><span style="color:#F07178;">  </span><span style="color:#676E95;font-style:italic;">//此处是页面DOM加载完成的入口</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>1.等着DOM结构渲染完毕即可执行内部代码,不必等到所有外部资源加载完成,jQuery帮我们完成了封装</p><p>2.相当于原生js中的DOMContentloaded</p><p>3.不同于原生js中的load事件是等页面文档,外部js文件,css文件,图片加载完毕才执行内部代码</p><p>4.更推荐使用第一种方式</p><h2 id="jquery的顶级对象" tabindex="-1">jQuery的顶级对象$ <a class="header-anchor" href="#jquery的顶级对象" aria-label="Permalink to &quot;jQuery的顶级对象$&quot;">​</a></h2><p>1.$是jQuery的别称,在代码中可以使用jQuery代替$,但一般为了方便,通常都直接使用$</p><p>2.$是jQuery的顶级对象,相当于原生js中的window,把元素利用$包装成jQuery对象,就可以调用jQuery的方法</p><h2 id="jquery对象和dom对象" tabindex="-1">jQuery对象和DOM对象 <a class="header-anchor" href="#jquery对象和dom对象" aria-label="Permalink to &quot;jQuery对象和DOM对象&quot;">​</a></h2><p>1.原生js获取过来的对象就是DOM对象</p><p>2.jQuery方法获取的对象就是jQuery对象</p><p>3.jQuery对象本质是:利用$对DOM对象包装后产生的对象(伪数组形式存储)</p><h2 id="jquery对象和dom对象转换" tabindex="-1">jQuery对象和DOM对象转换 <a class="header-anchor" href="#jquery对象和dom对象转换" aria-label="Permalink to &quot;jQuery对象和DOM对象转换&quot;">​</a></h2><p>因为原生js比jQuery更大,原生的一些属性和方法jQuery没有给我们封装,要想使用这些属性和方法需要把jQuery对象转换成DOM对象才能使用</p><p>1.DOM对象转换为jQuery对象</p><blockquote><p>$(&#39;div&#39;)</p></blockquote><p>2.jQuery对象转换为DOM对象(两种方式)</p><blockquote><p>$(&#39;div&#39;)[index] index是索引号</p></blockquote><blockquote><p>$(&#39;div&#39;).get(index) index是索引号</p></blockquote>`,25),p=[l];function r(t,c,i,y,u,d){return e(),s("div",null,p)}const h=a(o,[["render",r]]);export{D as __pageData,h as default};
