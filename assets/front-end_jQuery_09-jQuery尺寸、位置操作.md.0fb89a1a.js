import{_ as t,o as e,c as l,V as r}from"./chunks/framework.7cbf217e.js";const f=JSON.parse('{"title":"jQuery尺寸,位置操作","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/jQuery/09-jQuery尺寸、位置操作.md","filePath":"front-end/jQuery/09-jQuery尺寸、位置操作.md","lastUpdated":1683117492000}'),i={name:"front-end/jQuery/09-jQuery尺寸、位置操作.md"},o=r('<h1 id="jquery尺寸-位置操作" tabindex="-1">jQuery尺寸,位置操作 <a class="header-anchor" href="#jquery尺寸-位置操作" aria-label="Permalink to &quot;jQuery尺寸,位置操作&quot;">​</a></h1><h2 id="jquery尺寸" tabindex="-1">jQuery尺寸 <a class="header-anchor" href="#jquery尺寸" aria-label="Permalink to &quot;jQuery尺寸&quot;">​</a></h2><table><thead><tr><th style="text-align:center;">语法</th><th style="text-align:center;">用法</th></tr></thead><tbody><tr><td style="text-align:center;">width()/height()</td><td style="text-align:center;">取得匹配元素宽度和高度值,只算width/height</td></tr><tr><td style="text-align:center;">innerWidth()/innerHeight()</td><td style="text-align:center;">取得匹配元素的宽度和高度值,包含padding</td></tr><tr><td style="text-align:center;">outerWidth()/outerHeight()</td><td style="text-align:center;">取得匹配元素的宽度和高度值,包含padding,boder</td></tr><tr><td style="text-align:center;">outerWidth(true)/outerHeight(true)</td><td style="text-align:center;">取得匹配元素宽度和高度值,包含padding,border,margin</td></tr></tbody></table><ul><li>以上参数为空,则获取相应值,返回的是数字型</li><li>如果参数是数字,则是修改相应值</li><li>参数可以不必写单位</li></ul><h2 id="jquery位置" tabindex="-1">jQuery位置 <a class="header-anchor" href="#jquery位置" aria-label="Permalink to &quot;jQuery位置&quot;">​</a></h2><p>位置主要有三个:offset(),position(),scrollTop()/scrollLeft()</p><ol><li>offset()设置或获取元素偏移 //相对于文档的位置距离 <ol><li>offset()方法设置或返回被选元素相对于==文档==的偏移坐标,跟父级没有关系</li><li>不受定位影响</li><li>该方法有2个属性left,top.offset().top用于获取距离文档顶部的距离,offset().left用于获取距离文档左侧的距离</li><li>可以设置元素的偏移:offset({top:10,left:30});</li></ol></li><li>position()获取元素偏移 <ol><li>获取带有定位父元素的位置</li><li>如果父级没有带有定位,则以文档为准</li><li>只能获取,不能设置</li></ol></li><li>scrollTop()/scrollLeft()设置或获取元素被卷去的头部和左侧 <ol><li>scrollTop()方法设置或返回被选元素被卷曲的头部</li></ol></li></ol>',7),a=[o];function n(d,s,c,h,u,_){return e(),l("div",null,a)}const p=t(i,[["render",n]]);export{f as __pageData,p as default};
