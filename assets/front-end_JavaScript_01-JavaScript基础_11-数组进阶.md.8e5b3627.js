import{_ as s,o as a,c as n,V as l}from"./chunks/framework.7cbf217e.js";const p="/assets/image-20220516020042821.359fea23.png",d=JSON.parse('{"title":"什么是数组","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/JavaScript/01-JavaScript基础/11-数组进阶.md","filePath":"front-end/JavaScript/01-JavaScript基础/11-数组进阶.md","lastUpdated":1683117492000}'),o={name:"front-end/JavaScript/01-JavaScript基础/11-数组进阶.md"},e=l(`<h1 id="什么是数组" tabindex="-1">什么是数组 <a class="header-anchor" href="#什么是数组" aria-label="Permalink to &quot;什么是数组&quot;">​</a></h1><p>参考文献：<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noreferrer">Array - JavaScript | MDN (mozilla.org)</a></p><h2 id="array-数组" tabindex="-1">Array(数组) <a class="header-anchor" href="#array-数组" aria-label="Permalink to &quot;Array(数组)&quot;">​</a></h2><p>JavaScript的 <strong><code>Array</code></strong> 对象是用于构造数组的全局对象，数组是类似于列表的高阶对象。</p><p>在JavaScript里面，所有的方法，数据都可以看作是一类方法和类的对象方法。</p><p>创建一个新数组即是一种由某类的构造函数生成的数组对象，其值的形式是通过’[1，2，...]‘展示</p><h3 id="描述array-mdn解释" tabindex="-1">描述Array(MDN解释) <a class="header-anchor" href="#描述array-mdn解释" aria-label="Permalink to &quot;描述Array(MDN解释)&quot;">​</a></h3><ol><li><p>数组是一种类列表对象,它的原型中提供了遍历和修改元素的相关操作</p></li><li><p>数组的元素类型和长度不固定,其长度可以随时改变</p></li><li><p>数组的索引必须是整数,不能使用字符串(不考虑关联数组)</p></li><li><p>数组对象的属性和数组元素列表是分开储存的,并且数组的遍历和修改操作也不能作用于这些命名属性,即只能对元素进行操作</p></li><li><p>扩展</p><blockquote><p>Object.defineProperty(<em>obj</em>,&quot;<em>prop</em>&quot;,<em>descriptor</em>)</p><p>obj:要定义属性的对象</p><p>prop:要定义或修改的属性的名称</p><p>descriptor:要定义或修改的值</p><p>return:obj</p></blockquote></li></ol><p>定义某一个对象属性的简单使用:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">defineProperty</span><span style="color:#A6ACCD;">(obj</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">key</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">enumerable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">configurable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">writable</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">value</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">static</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">可选定义值</th><th style="text-align:center;">类型</th><th style="text-align:center;">描述</th></tr></thead><tbody><tr><td style="text-align:center;">enumerable</td><td style="text-align:center;">boolean/<strong>默认为 <code>false</code></strong></td><td style="text-align:center;">简单理解为能否遍历/枚举里面的值</td></tr><tr><td style="text-align:center;">configurable</td><td style="text-align:center;">boolean/<strong>默认为</strong> <strong><code>false</code></strong></td><td style="text-align:center;">该属性可被更改或删除</td></tr><tr><td style="text-align:center;">writable</td><td style="text-align:center;">boolean/<strong>默认为</strong> <strong><code>false</code></strong></td><td style="text-align:center;">value能否被更改</td></tr><tr><td style="text-align:center;">value</td><td style="text-align:center;">任何有效的 JavaScript 值（数值，对象，函数等）<strong>/默认为undefined</strong></td><td style="text-align:center;">该属性对应的值</td></tr></tbody></table><p><strong>即数组规定了原型对象上的某些属性,所以对数组的对象属性是不能操作的</strong></p><h2 id="创建一个数组-其中包含的内容" tabindex="-1">创建一个数组,其中包含的内容 <a class="header-anchor" href="#创建一个数组-其中包含的内容" aria-label="Permalink to &quot;创建一个数组,其中包含的内容&quot;">​</a></h2><p>通过最简单的方式创建一个新数组:</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        const arr = [1,2,3]</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(arr);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>输出后如下:</p><p><img src="`+p+`" alt="image-20220516020042821"></p><p>数组除了包含本身的数组元素之外,还有其对象属性,因此可以称数组为数组对象.在原型对象上包含了数组的各种方法,可以对数组进行使用</p><h2 id="数组的基本使用方式" tabindex="-1">数组的基本使用方式 <a class="header-anchor" href="#数组的基本使用方式" aria-label="Permalink to &quot;数组的基本使用方式&quot;">​</a></h2><ol><li>数组字面量创建</li><li>构造函数创建数组</li><li>获取数组的长度</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        //1.数组字面量创建</span></span>
<span class="line"><span style="color:#A6ACCD;">        const arr1 = [1, 2, 3]</span></span>
<span class="line"><span style="color:#A6ACCD;">        const newarr = []</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(arr1);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        //2.构造函数创建</span></span>
<span class="line"><span style="color:#A6ACCD;">        const arr2 = new Array(1, 2)</span></span>
<span class="line"><span style="color:#A6ACCD;">        const newarr2 = new Array()</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(arr2);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        //3.获取数组的长度</span></span>
<span class="line"><span style="color:#A6ACCD;">        const length = arr1.length</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(length);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        //4.获取索引值下的数组元素</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(arr1[2]);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p><strong>注意:数组的索引是从0开始,即元素的第一项索引为0</strong></p><h2 id="数组的判断" tabindex="-1">数组的判断 <a class="header-anchor" href="#数组的判断" aria-label="Permalink to &quot;数组的判断&quot;">​</a></h2><h3 id="_1-instanceof" tabindex="-1">1.instanceof <a class="header-anchor" href="#_1-instanceof" aria-label="Permalink to &quot;1.instanceof&quot;">​</a></h3><p><strong>可以通过其原型链上是否存在Array原型对象来判断该对象类型</strong></p><p>因为数组对象是由构造函数产生,在原型链的底层是一个Array的类的构造函数,只要在原型链上有Array的原型对象,即可判断该对象的类型</p><p>如何确定这个方法可行呢?,例子如下:</p><p>例子表明,在item1的原型链上有Item构造函数,而Item构造函数的原型链有Object,所以item1上有Object的属性,即可以判断item1为对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Item</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">constructor</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">name</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">age</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;font-style:italic;">val</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">name</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">name</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">age</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">age</span></span>
<span class="line"><span style="color:#F07178;">          </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">value</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">val</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> item1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Item</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(item1 </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Item</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#A6ACCD;">	console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(item1 </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span><span style="color:#A6ACCD;">)</span><span style="color:#676E95;font-style:italic;">//true</span></span></code></pre></div><p>运用此方法判断数组如下:</p><p><strong>该方法的局限性在于</strong>:当一个复杂数据类型为数组时,它也是对象;如果需要判断某个不可见的数据类型,那么不能用于判断其是否为对象</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newarr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> newarr </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Array</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> result2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> newarr </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Object</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result1)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#A6ACCD;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(result2)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//true</span></span></code></pre></div><h3 id="_2-isarray-推荐" tabindex="-1">2.isArray()[推荐] <a class="header-anchor" href="#_2-isarray-推荐" aria-label="Permalink to &quot;2.isArray()[推荐]&quot;">​</a></h3><p><strong>Array.isArray()</strong> 用于确定==传递的值==是否是一个 <a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array" target="_blank" rel="noreferrer"><code>Array</code></a>。</p><p>该方法不仅可以判断一个变量的类型,还可以判断其内部的值是否为数组</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> newarr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> arr2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">,{</span><span style="color:#F07178;">id</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">age</span><span style="color:#89DDFF;">:</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">},</span><span style="color:#A6ACCD;">[</span><span style="color:#F78C6C;">22</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> res1</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#A6ACCD;">(newarr)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> res2</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#A6ACCD;">(newarr[</span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> res3 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#A6ACCD;">(arr2)</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> res4 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#A6ACCD;">(arr2[</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> res5 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">Array</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">isArray</span><span style="color:#A6ACCD;">(arr2[</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">])</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(res1)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#A6ACCD;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(res2)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"><span style="color:#A6ACCD;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(res3)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#A6ACCD;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(res4)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//false</span></span>
<span class="line"><span style="color:#A6ACCD;">      console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(res5)</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">//true</span></span></code></pre></div>`,36),t=[e];function r(c,y,A,C,D,i){return a(),n("div",null,t)}const g=s(o,[["render",r]]);export{d as __pageData,g as default};
