import{_ as s,o as a,c as l,V as n}from"./chunks/framework.7cbf217e.js";const o="/assets/image-20220424214339932.c50c6db7.png",C=JSON.parse('{"title":"jQuery事件","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/jQuery/10-jQuery事件.md","filePath":"front-end/jQuery/10-jQuery事件.md","lastUpdated":1683117492000}'),e={name:"front-end/jQuery/10-jQuery事件.md"},p=n('<h1 id="jquery事件" tabindex="-1">jQuery事件 <a class="header-anchor" href="#jquery事件" aria-label="Permalink to &quot;jQuery事件&quot;">​</a></h1><h2 id="jquery事件注册" tabindex="-1">jQuery事件注册 <a class="header-anchor" href="#jquery事件注册" aria-label="Permalink to &quot;jQuery事件注册&quot;">​</a></h2><h3 id="单个事件注册" tabindex="-1">单个事件注册 <a class="header-anchor" href="#单个事件注册" aria-label="Permalink to &quot;单个事件注册&quot;">​</a></h3><blockquote><p>element.事件(function(){})</p></blockquote><p>其他事件和原生基本一致</p><blockquote><p>mouseover,mouseout,blur,focus,change,keydown,keyup,resize,scroll等</p></blockquote><h2 id="jquery事件处理" tabindex="-1">jQuery事件处理 <a class="header-anchor" href="#jquery事件处理" aria-label="Permalink to &quot;jQuery事件处理&quot;">​</a></h2><h3 id="事件处理on-绑定事件" tabindex="-1">事件处理on()绑定事件 <a class="header-anchor" href="#事件处理on-绑定事件" aria-label="Permalink to &quot;事件处理on()绑定事件&quot;">​</a></h3><p>on()方法在匹配元素上绑定一个或多个事件的事件处理函数</p><blockquote><p>element.on(event,[selector],fn)</p></blockquote><ol><li>events:一个或多个用空格分隔事件类型,如click或keydown</li><li>selector:元素的子元素选择器</li><li>fn:回调函数 即绑定在元素身上的侦听函数</li></ol><p><img src="'+o+`" alt="image-20220424214339932"></p><h3 id="事件委托" tabindex="-1">事件委托 <a class="header-anchor" href="#事件委托" aria-label="Permalink to &quot;事件委托&quot;">​</a></h3><blockquote><p>$(&#39;ul&#39;).on(&#39;click&#39;,&#39;li&#39;,function() {})</p><p>事件绑定在ul上,触发在li上</p></blockquote><p>动态创建元素</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//不能弹出</span></span>
<span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ol li</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">click</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">11</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> li </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;li&gt;qeqw&lt;/li&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ol</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#A6ACCD;">(li)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">//用on可以</span></span>
<span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ol</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#82AAFF;">on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">click</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">li</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">alert</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">11</span><span style="color:#F07178;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> li </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">&lt;li&gt;qeqw&lt;/li&gt;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#82AAFF;">$</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">ol</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">append</span><span style="color:#A6ACCD;">(li)</span></span></code></pre></div><h3 id="事件处理off-解绑事件" tabindex="-1">事件处理off()解绑事件 <a class="header-anchor" href="#事件处理off-解绑事件" aria-label="Permalink to &quot;事件处理off()解绑事件&quot;">​</a></h3><p>off()方法可以移除通过on()方法添加的事件处理程序</p><blockquote><p>$(&#39;div&#39;).off(&#39;click&#39;) //解除所有事件</p><p>$(&#39;ul&#39;).off(&#39;click&#39;,&#39;li&#39;) //接触某个事件</p><p>$(&#39;p&#39;).one(&#39;click&#39;,function(){}) //只能触发一次</p></blockquote><h3 id="自动触发事件" tabindex="-1">自动触发事件 <a class="header-anchor" href="#自动触发事件" aria-label="Permalink to &quot;自动触发事件&quot;">​</a></h3><blockquote><p>$(&#39;div&#39;).click(); //第一种自动调用函数</p></blockquote><h3 id="trigger-自动触发" tabindex="-1">trigger()自动触发 <a class="header-anchor" href="#trigger-自动触发" aria-label="Permalink to &quot;trigger()自动触发&quot;">​</a></h3><blockquote><p>element.trigger(&#39;click&#39;) //第二种自动触发 //input有光标 //会触发默认行为</p><p>element.triggerHandler(&#39;click&#39;) //第三种自动触发 //input不会有关标 //不会触发元素默认行为</p></blockquote><h2 id="jquery事件对象" tabindex="-1">jQuery事件对象 <a class="header-anchor" href="#jquery事件对象" aria-label="Permalink to &quot;jQuery事件对象&quot;">​</a></h2><blockquote><p>element.on(event,[selector],function(event) {})</p><p>//回调函数里面的event就是事件对象</p></blockquote><blockquote><p>阻止默认行为:event.preventDefault()或者return false</p><p>阻止冒泡:event.stopPropagation()</p></blockquote>`,26),t=[p];function r(c,i,y,D,F,u){return a(),l("div",null,t)}const d=s(e,[["render",r]]);export{C as __pageData,d as default};
