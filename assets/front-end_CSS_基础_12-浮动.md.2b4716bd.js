import{_ as s,o as a,c as l,V as n}from"./chunks/framework.7cbf217e.js";const C=JSON.parse('{"title":"浮动","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/CSS/基础/12-浮动.md","filePath":"front-end/CSS/基础/12-浮动.md","lastUpdated":1683117492000}'),o={name:"front-end/CSS/基础/12-浮动.md"},t=n(`<h1 id="浮动" tabindex="-1">浮动 <a class="header-anchor" href="#浮动" aria-label="Permalink to &quot;浮动&quot;">​</a></h1><p>传统网页布局的三种方式</p><ol><li><p>普通流（标准流）</p><p>按照规定好的默认方式排列</p><ol><li>块级元素会独占一行,从上向下顺序排列</li></ol><p>​ 常用元素:div、hr、p、h1~h6、ul、ol, dl、form、table</p><ol start="2"><li><p>行内元素会按照顺序,从左到右顺序排列,碰到父元素边缘则自动换行</p><p>常用元素:span、a、i、em等</p></li></ol></li></ol><p>2、浮动</p><p>3、定位</p><h2 id="什么是浮动" tabindex="-1">什么是浮动 <a class="header-anchor" href="#什么是浮动" aria-label="Permalink to &quot;什么是浮动&quot;">​</a></h2><p>float属性用于创建浮动框,将其移动到一边,直到左边缘或右边缘触及包含块或另一个浮动框的边缘</p><p>语法:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">选择器</span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#B2CCD6;">float</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> 属性值</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>none</td><td>元素不浮动(默认值)</td></tr><tr><td>left</td><td>元素向左浮动</td></tr><tr><td>right</td><td>元素向右浮动</td></tr></tbody></table><h2 id="浮动特性" tabindex="-1">浮动特性 <a class="header-anchor" href="#浮动特性" aria-label="Permalink to &quot;浮动特性&quot;">​</a></h2><p><strong>加了浮动之后的元素,会具有很多特性需要我们掌握的：</strong></p><ol><li><p>浮动元素会脱离标准流(脱标)</p></li><li><p>浮动的元素会一行内显示井且元素顶部对齐</p></li><li><p>浮动的元素会具有行内块元素的特性</p></li></ol><p><strong>设置了浮动( float )的元素最重要特性:</strong></p><ol><li><p>脱离标准普通流的控制(浮)移动到指定位置(动), (俗称脱标)</p></li><li><p>浮动的盒子不再保留原先的位置</p></li></ol><h2 id="浮动布局注意点" tabindex="-1">浮动布局注意点 <a class="header-anchor" href="#浮动布局注意点" aria-label="Permalink to &quot;浮动布局注意点&quot;">​</a></h2><ol><li><p>浮动和标准流的父盒子搭配</p><p>先用标准流的父元素排列上下位置,之后内部子元素采取浮动排列左右位置</p></li><li><p>一个元素浮动了,理论上其余的兄弟元素也要浮动</p><p>一个盒子里面有多个子盒子,如果其中一个盒子浮动了,那么其他兄弟也应该浮动,以防止引起问题</p><p>浮动的盒子只会影响浮动盒子后面的标准流不会影响前面的标准流</p></li></ol><h2 id="清除浮动" tabindex="-1">清除浮动 <a class="header-anchor" href="#清除浮动" aria-label="Permalink to &quot;清除浮动&quot;">​</a></h2><p><strong>清除浮动本质：</strong></p><ul><li>清除浮动的本质是清除浮动元素造成的影响</li><li>如果父盒子本身有高度,则不需要清除浮动</li><li>清除浮动之后， 父级就会根据浮动的子盒子自动检测高度。父级有了高度,就不会影响下面的标准流了</li></ul><p>语法:</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">选择器</span><span style="color:#89DDFF;">{</span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">属性值</span><span style="color:#89DDFF;">;}</span></span></code></pre></div><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td>left</td><td>不允许左侧有浮动元素(清除左侧浮动的影响)</td></tr><tr><td>right</td><td>不允许右侧有浮动元素(清除右侧浮动的影响)</td></tr><tr><td>both</td><td>同时清除左右两侧浮动的影响</td></tr></tbody></table><p>我们实际工作中,几乎只用clear:both</p><p>清除浮动的策略是:闭合浮动</p><h3 id="清除浮动的方法" tabindex="-1">清除浮动的方法 <a class="header-anchor" href="#清除浮动的方法" aria-label="Permalink to &quot;清除浮动的方法&quot;">​</a></h3><ol><li>额外标签法也称为隔墙法,是W3C推荐的做法</li><li>父级添加overflow属性</li><li>父级添加after伪元素</li><li>父级添加双伪元素</li></ol><h3 id="额外标签法" tabindex="-1">额外标签法 <a class="header-anchor" href="#额外标签法" aria-label="Permalink to &quot;额外标签法&quot;">​</a></h3><p><strong>也称为隔墙法,是W3C推荐的做法</strong></p><p>额外标签法会在浮动元素末尾添加一个空的标签</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;"> clear:both</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> &gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">br</span><span style="color:#89DDFF;">/&gt;</span></span></code></pre></div><ul><li>优点:通俗易懂,书写方便.</li><li>缺点:添加许多无意义的标签,结构化较差</li></ul><blockquote><p>注意:要求这个新的空标签必须是块级元素</p></blockquote><h3 id="父级添加overflow" tabindex="-1">父级添加overflow <a class="header-anchor" href="#父级添加overflow" aria-label="Permalink to &quot;父级添加overflow&quot;">​</a></h3><p>可以给父级添加overflow属性,将其属性值设置为hidden. auto 或scroll</p><blockquote><p>注意是给父元素添加代码</p></blockquote><ul><li>优点:代码简洁</li><li>缺点:无法显示溢出的部分</li></ul><h3 id="after伪元素法" tabindex="-1">after伪元素法 <a class="header-anchor" href="#after伪元素法" aria-label="Permalink to &quot;after伪元素法&quot;">​</a></h3><p>:after方式是额外标签法的升级版。也是给父元素添加</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">after</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> block</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">clear</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> both</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">visibility</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> hidden</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">/* IE6、7专有*/</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">zoom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="双伪元素清除浮动" tabindex="-1">双伪元素清除浮动 <a class="header-anchor" href="#双伪元素清除浮动" aria-label="Permalink to &quot;双伪元素清除浮动&quot;">​</a></h3><p>也是给父元素添加</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">before</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">table</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#89DDFF;">:</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">clear</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">both</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">clearfix</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#B2CCD6;">zoom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="清除浮动总结" tabindex="-1">清除浮动总结 <a class="header-anchor" href="#清除浮动总结" aria-label="Permalink to &quot;清除浮动总结&quot;">​</a></h2><p>为什么需要清除浮动?</p><ol><li>父级没高度</li><li>子盒子浮动了</li><li>影响下面布局了,我们就应该清除浮动了</li></ol><table><thead><tr><th>清除浮动的方式</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>额外标签法(隔墙法)</td><td>通俗易懂，书写方便</td><td>添加许多无意义的标签，结构化较差。</td></tr><tr><td>父级overflow:hidden;</td><td>书写简单</td><td>溢出隐藏</td></tr><tr><td>父级after伪元素</td><td>结构语义化正确</td><td>由于IE6-7不支持:after,兼容性问题</td></tr><tr><td>父级双伪元素</td><td>结构语义化正确</td><td>由于IE6-7不支持:after,兼容性问题</td></tr></tbody></table>`,47),p=[t];function e(r,c,i,D,d,y){return a(),l("div",null,p)}const h=s(o,[["render",e]]);export{C as __pageData,h as default};
