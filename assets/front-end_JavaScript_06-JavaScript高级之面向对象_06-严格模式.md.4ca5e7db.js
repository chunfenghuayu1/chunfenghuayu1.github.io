import{_ as s,o as n,c as a,V as l}from"./chunks/framework.7cbf217e.js";const p="/assets/image-20230415025333994.2c68b6f0.png",d=JSON.parse('{"title":"严格模式","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/JavaScript/06-JavaScript高级之面向对象/06-严格模式.md","filePath":"front-end/JavaScript/06-JavaScript高级之面向对象/06-严格模式.md","lastUpdated":1683117492000}'),o={name:"front-end/JavaScript/06-JavaScript高级之面向对象/06-严格模式.md"},t=l(`<h1 id="严格模式" tabindex="-1">严格模式 <a class="header-anchor" href="#严格模式" aria-label="Permalink to &quot;严格模式&quot;">​</a></h1><h2 id="什么是严格模式" tabindex="-1">什么是严格模式 <a class="header-anchor" href="#什么是严格模式" aria-label="Permalink to &quot;什么是严格模式&quot;">​</a></h2><p>JavaScript除了提供正常模式外，还提供了==严格模式(strict mode)==.ES5的严格模式是采用具有限制性JavaScript变体的一种方式,即在严格的条件下运行JS代码.</p><p>严格模式在IE10以上版本的浏览器中才会被支持,旧版本浏览器中会被忽略.</p><p>严格模式对正常的JavaScript语义做了一些更改:</p><ol><li>消除了JavaScript语法的一些不合理,不严谨之处,减少了一些怪异行为</li><li>消除代码运行的一些不安全之处,保证代码运行的安全.</li><li>提高编译器效率,增加运行速度</li><li>禁用了在ECMAScript的未来版本中可能会定义的一些语法,为未来新版本的JavaScript做好铺垫.比如一些保留字如:class,enum,export,extends,import,super不能做变量名</li></ol><h2 id="开启严格模式" tabindex="-1">开启严格模式 <a class="header-anchor" href="#开启严格模式" aria-label="Permalink to &quot;开启严格模式&quot;">​</a></h2><p>严格模式可以应用到<strong>整个脚本</strong>或<strong>个别函数</strong>中.因此在使用时,我们可以将严格模式分为<strong>为脚本开启严格模式</strong>和<strong>为函数开启严格模式</strong>两种情况</p><h3 id="_1-为脚本开启严格模式" tabindex="-1">1.为脚本开启严格模式 <a class="header-anchor" href="#_1-为脚本开启严格模式" aria-label="Permalink to &quot;1.为脚本开启严格模式&quot;">​</a></h3><p>为整个脚本文件开启严格模式,需要在所有语句之前<strong>放一个特定的语句&quot;use strict&quot;;(或&#39;use strict&#39;😉</strong>.</p><p>有的script基本是严格模式,有的script脚本是正常模式,这样不利于文件合并,所以可以将整个脚本文件放在一个立即执行的匿名函数之中.这样独立创建一个作用域而不影响其他script脚本文件</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;!--</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">为整个脚本</span><span style="color:#A6ACCD;">(script标签)开启严格模式 </span><span style="color:#89DDFF;">--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &#39;use strict&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">        //   下面的js 代码就会按照严格模式执行代码</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        (function() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)();</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;!--</span><span style="color:#A6ACCD;"> 为某个函数开启严格模式 </span><span style="color:#89DDFF;">--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 此时只是给fn函数开启严格模式</span></span>
<span class="line"><span style="color:#A6ACCD;">        function fn() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 下面的代码按照严格模式执行</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        function fun() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 里面的还是按照普通模式执行</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="_2-为函数开启严格模式" tabindex="-1">2.为函数开启严格模式 <a class="header-anchor" href="#_2-为函数开启严格模式" aria-label="Permalink to &quot;2.为函数开启严格模式&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;!--</span><span style="color:#A6ACCD;"> 为某个函数开启严格模式 </span><span style="color:#89DDFF;">--&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 此时只是给fn函数开启严格模式</span></span>
<span class="line"><span style="color:#A6ACCD;">        function fn() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">use strict</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 下面的代码按照严格模式执行</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        function fun() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#676E95;font-style:italic;">// 里面的还是按照普通模式执行</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="严格模式中的变化" tabindex="-1">严格模式中的变化 <a class="header-anchor" href="#严格模式中的变化" aria-label="Permalink to &quot;严格模式中的变化&quot;">​</a></h2><h3 id="变量的规定" tabindex="-1">变量的规定 <a class="header-anchor" href="#变量的规定" aria-label="Permalink to &quot;变量的规定&quot;">​</a></h3><ol><li>在正常模式下,如果一个变量没有声明就赋值,默认是全局变量.</li><li>严格模式禁止这种用法,变量都必须先用var命令声明,然后再使用</li><li>严禁删除已声明变量.例如,delete x;语法是错误的</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &#39;use strict&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 1. 我们的变量名必须先声明再使用</span></span>
<span class="line"><span style="color:#A6ACCD;">        // num = 10;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(num);</span></span>
<span class="line"><span style="color:#A6ACCD;">        var num = 10;</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(num);</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 2.我们不能随意删除已经声明好的变量</span></span>
<span class="line"><span style="color:#A6ACCD;">        // delete num;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="严格模式下this指向问题" tabindex="-1">严格模式下this指向问题 <a class="header-anchor" href="#严格模式下this指向问题" aria-label="Permalink to &quot;严格模式下this指向问题&quot;">​</a></h3><ol><li>以前在全局作用域函数中的this指向window对象</li><li><strong>严格模式下全局作用域中函数中的this是undefined</strong></li><li>以前构造函数时不加new也可以调用,当普通函数,this指向全局对象</li><li>严格模式下,如果构造函数不加new调用,this会报错</li><li>new实例化的构造函数指向创建的对象实例</li><li>定时器this还是指向window</li><li>事件,对象还是指向调用者</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &#39;use strict&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">		//3. 严格模式下全局作用域中函数中的 this 是 undefined。</span></span>
<span class="line"><span style="color:#A6ACCD;">        function fn() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this</span><span style="color:#A6ACCD;">); </span><span style="color:#676E95;font-style:italic;">// undefined。</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        fn();</span></span>
<span class="line"><span style="color:#A6ACCD;">        //4. 严格模式下,如果 构造函数不加new调用, this 指向的是undefined 如果给他赋值则 会报错.</span></span>
<span class="line"><span style="color:#A6ACCD;">        function Star() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">sex </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">男</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        // Star();</span></span>
<span class="line"><span style="color:#A6ACCD;">        var ldh = new Star();</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(ldh.sex);</span></span>
<span class="line"><span style="color:#A6ACCD;">        //5. 定时器 this 还是指向 window </span></span>
<span class="line"><span style="color:#A6ACCD;">        setTimeout(function() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">, 2000);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="函数变化" tabindex="-1">函数变化 <a class="header-anchor" href="#函数变化" aria-label="Permalink to &quot;函数变化&quot;">​</a></h3><ol><li>函数不能有重名的参数</li><li>函数必须声明在顶层.新版本的JavaScript会引入&quot;块级作用域&quot;(ES6中已引入).为了与新版本接轨,不允许在非函数的代码块内声明函数</li></ol><p><strong>更多严格模式要求参考:<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Strict_mode" target="_blank" rel="noreferrer">严格模式 - JavaScript | MDN (mozilla.org)</a></strong></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        &#39;use strict&#39;;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 6. 严格模式下函数里面的参数不允许有重名</span></span>
<span class="line"><span style="color:#A6ACCD;">        function fn(a, a) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">           console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(a </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> a);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // fn(1, 2);</span></span>
<span class="line"><span style="color:#A6ACCD;">        function fn() </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="高阶函数" tabindex="-1">高阶函数 <a class="header-anchor" href="#高阶函数" aria-label="Permalink to &quot;高阶函数&quot;">​</a></h2><p><strong>高阶函数</strong>是对其他函数进行操作的函数,它<strong>接受函数作为参数</strong>或者<strong>将函数作为返回值输出</strong></p><p><img src="`+p+`" alt="image-20230415025333994"></p><p>接受函数作为参数</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 高阶函数- 函数可以作为参数传递</span></span>
<span class="line"><span style="color:#A6ACCD;">        function fn(a, b, callback) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(a </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> b);</span></span>
<span class="line"><span style="color:#A6ACCD;">            callback </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">callback</span><span style="color:#A6ACCD;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        fn(1, 2, function() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">我是最后调用的</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>将函数作为返回值</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    function fn()</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        return </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{}</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><ul><li>此时 fn 就是一个高阶函数</li><li>函数也是一种数据类型，同样可以作为参数，传递给另外一个参数使用。最典型的就是作为回调函数</li><li>同理函数也可以作为返回值传递回来</li></ul>`,33),e=[t];function c(r,i,D,y,F,C){return n(),a("div",null,e)}const h=s(o,[["render",c]]);export{d as __pageData,h as default};
