import{_ as a,o as t,c as s,V as n}from"./chunks/framework.7cbf217e.js";const o="/assets/image-20230414210118664.da963098.png",e="/assets/image-20230414210220781.42cdcbd7.png",h=JSON.parse('{"title":"动画","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/CSS/HTML5新特性/12-动画.md","filePath":"front-end/CSS/HTML5新特性/12-动画.md","lastUpdated":1683117492000}'),l={name:"front-end/CSS/HTML5新特性/12-动画.md"},r=n(`<h1 id="动画" tabindex="-1">动画 <a class="header-anchor" href="#动画" aria-label="Permalink to &quot;动画&quot;">​</a></h1><p>动画(animation)是CSS3中具有顛覆性的特征之一，可通过设置多个节点来精确控制一个或一组动画，常用来实现复杂的动画效果。</p><p>相比较过渡，动画可以实现更多变化，更多控制，连续自动播放等效果。</p><h2 id="动画序列-keyframes" tabindex="-1">动画序列 keyframes <a class="header-anchor" href="#动画序列-keyframes" aria-label="Permalink to &quot;动画序列 keyframes&quot;">​</a></h2><ul><li>0%是动画的开始，100%是动画的完成。这样的规则就是动画序列。</li><li>在@keyframes中规定某项CSS样式，就能创建由当前样式逐渐改为新样式的动画效果。</li><li>动画是使元素从一种祥式逐渐变化为另-种样式的效果。您可以改变任意多的样式任意多的次数。</li><li>请用百分比来规定变化发生的时间，或用关键词&quot;from&#39;和&quot;to&quot;，等同于0%和100%。</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">@keyframes</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">move</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">0%</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translateX</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0px</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#FFCB6B;">100%</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translateX</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1000px</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*调用动画*/</span></span>
<span class="line"><span style="color:#A6ACCD;">Animation-name：；</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*持续时间*/</span></span>
<span class="line"><span style="color:#A6ACCD;">Animation-duration：；</span></span></code></pre></div><p><img src="`+o+`" alt="image-20230414210118664"></p><h2 id="动画属性" tabindex="-1">动画属性 <a class="header-anchor" href="#动画属性" aria-label="Permalink to &quot;动画属性&quot;">​</a></h2><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>@keyframes</td><td>规定动画。</td></tr><tr><td>animation</td><td>所有动画属性的简写属性，除了animation play state属性。</td></tr><tr><td>animation-name</td><td>规定@keyframes动画的名称。( 必须的)</td></tr><tr><td>animation-duration</td><td>规定动画完成个周期所花费的秒或毫秒，默认是0。( 必须的)</td></tr><tr><td>animation-timing-function</td><td>规定动画的速度曲线，默认是&quot;ease&quot; 。</td></tr><tr><td>animation-delay</td><td>规定动画何时开始，默认是0。</td></tr><tr><td>animation-iteration-count</td><td>规定动画被播放的次数，默认是1，还有infinite</td></tr><tr><td>animation-direction</td><td>规定动画是否在下一周期逆向播放.默认是&quot;normal &quot;,alternate逆播放</td></tr><tr><td>animation-play-state</td><td>规定动画是否正在运行或暂停。默认是&#39;running&quot;,还有&quot;paused&quot;.</td></tr><tr><td>animation-fill-mode</td><td>规定动画结束后状态.保持forwards回到起始backwards</td></tr></tbody></table><h2 id="动画简写" tabindex="-1">动画简写 <a class="header-anchor" href="#动画简写" aria-label="Permalink to &quot;动画简写&quot;">​</a></h2><p>animation :动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束的状态;</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">animation: name duration </span><span style="color:#FFCB6B;">timing-function</span><span style="color:#A6ACCD;"> delay </span><span style="color:#FFCB6B;">iteration-count</span><span style="color:#A6ACCD;"> direction </span><span style="color:#FFCB6B;">fill-mode</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">animation: myfirst 5s linear 2s infinite alternate;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*前两个属性必写*/</span></span></code></pre></div><p><img src="`+e+'" alt="image-20230414210220781"></p><h2 id="速度曲线-animation-timing-function" tabindex="-1">速度曲线 animation-timing-function <a class="header-anchor" href="#速度曲线-animation-timing-function" aria-label="Permalink to &quot;速度曲线 animation-timing-function&quot;">​</a></h2><table><thead><tr><th>值</th><th>描述</th></tr></thead><tbody><tr><td>linear</td><td>动画从头到尾的速度是相同的。匀速</td></tr><tr><td>ease</td><td>默认。动画以低速开始，然后加快，在结束前变慢。</td></tr><tr><td>ease-in</td><td>动画以低速开始。</td></tr><tr><td>ease-out</td><td>动画以低速结束。</td></tr><tr><td>ease-in-out</td><td>动画以低速开始和结束。</td></tr><tr><td>steps(）</td><td>指定了时间函数中的间隔数量(步长)</td></tr></tbody></table>',15),p=[r];function i(c,d,y,m,C,A){return t(),s("div",null,p)}const u=a(l,[["render",i]]);export{h as __pageData,u as default};
