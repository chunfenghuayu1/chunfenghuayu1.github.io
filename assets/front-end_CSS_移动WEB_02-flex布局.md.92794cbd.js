import{_ as t,o as e,c as l,V as a}from"./chunks/framework.7cbf217e.js";const n="/assets/image-20230415002049210.5a6ce256.png",u=JSON.parse('{"title":"flex布局","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/CSS/移动WEB/02-flex布局.md","filePath":"front-end/CSS/移动WEB/02-flex布局.md","lastUpdated":1683117492000}'),s={name:"front-end/CSS/移动WEB/02-flex布局.md"},i=a('<h1 id="flex布局" tabindex="-1">flex布局 <a class="header-anchor" href="#flex布局" aria-label="Permalink to &quot;flex布局&quot;">​</a></h1><h2 id="弹性布局" tabindex="-1">弹性布局 <a class="header-anchor" href="#弹性布局" aria-label="Permalink to &quot;弹性布局&quot;">​</a></h2><p><strong>问题</strong></p><ul><li>多个盒子横向排列使用什么属性？</li></ul><p>​ 浮动</p><ul><li>设置盒子间的间距使用什么属性？</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">margin</span></span></code></pre></div><ul><li>需要注意什么问题？</li></ul><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">浮动的盒子脱标</span></span></code></pre></div><h2 id="flex布局的特点" tabindex="-1">flex布局的特点 <a class="header-anchor" href="#flex布局的特点" aria-label="Permalink to &quot;flex布局的特点&quot;">​</a></h2><ul><li><p>是一种浏览器提倡的布局模型</p></li><li><p>布局网页更简单、灵活</p></li><li><p>避免浮动脱标的问题</p></li></ul><h2 id="flex布局模型构成" tabindex="-1">flex布局模型构成 <a class="header-anchor" href="#flex布局模型构成" aria-label="Permalink to &quot;flex布局模型构成&quot;">​</a></h2><p><strong>作用：</strong></p><ul><li><p>基于flex精确灵活控制块级盒子的布局方式，避免浮动布局中脱离文档流现象发生</p></li><li><p>flex布局非常适合结构化布局</p></li></ul><p><strong>设置方式：</strong></p><ul><li><p>父元素添加</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">display：flex；</span></span></code></pre></div></li><li><p>子元素可以自动的挤压或拉伸</p></li></ul><p><strong>组成部分：</strong></p><ul><li>弹性容器</li><li>弹性盒子</li><li>主轴</li><li>侧轴/交叉轴</li></ul><p><img src="'+n+`" alt="image-20230415002049210"></p><h2 id="主轴对齐方式——justify-content" tabindex="-1">主轴对齐方式——justify-content <a class="header-anchor" href="#主轴对齐方式——justify-content" aria-label="Permalink to &quot;主轴对齐方式——justify-content&quot;">​</a></h2><p><strong>修改主轴对齐方式</strong></p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">justify-content</span><span style="color:#A6ACCD;">:</span><span style="color:#FFCB6B;">space-between</span><span style="color:#A6ACCD;">；</span></span></code></pre></div><table><thead><tr><th style="text-align:center;">属性值</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">flex-start</td><td style="text-align:center;">默认值, 起点开始依次排列</td></tr><tr><td style="text-align:center;">flex-end</td><td style="text-align:center;">终点开始依次排列</td></tr><tr><td style="text-align:center;">center</td><td style="text-align:center;">沿主轴居中排列</td></tr><tr><td style="text-align:center;">space-around</td><td style="text-align:center;">弹性盒子沿主轴均匀排列, 空白间距均分在弹性盒子两侧</td></tr><tr><td style="text-align:center;">space-between</td><td style="text-align:center;">弹性盒子沿主轴均匀排列, 空白间距均分在相邻盒子之间</td></tr><tr><td style="text-align:center;">space-evenly</td><td style="text-align:center;">弹性盒子沿主轴均匀排列, 弹性盒子与容器之间间距相等</td></tr></tbody></table><h2 id="侧轴对齐方式——align-items" tabindex="-1">侧轴对齐方式——align-items <a class="header-anchor" href="#侧轴对齐方式——align-items" aria-label="Permalink to &quot;侧轴对齐方式——align-items&quot;">​</a></h2><p>使用align-items调节元素在侧轴的对齐方式</p><ul><li><p>修改侧轴对齐方式属性</p><p>==align-items：；==（添加到弹性容器）</p><p>==align-self：；== 控制某个弹性盒子在侧轴的对齐方式（添加到弹性盒子）</p><table><thead><tr><th style="text-align:center;">属性值</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">flex-start</td><td style="text-align:center;">默认值, 起点开始依次排列</td></tr><tr><td style="text-align:center;">flex-end</td><td style="text-align:center;">终点开始依次排列</td></tr><tr><td style="text-align:center;">center</td><td style="text-align:center;">沿侧轴居中排列</td></tr><tr><td style="text-align:center;">stretch</td><td style="text-align:center;">默认值, 弹性盒子沿着主轴线被拉伸至铺满容器 </td></tr></tbody></table></li></ul><h2 id="伸缩比——flex" tabindex="-1">伸缩比——flex <a class="header-anchor" href="#伸缩比——flex" aria-label="Permalink to &quot;伸缩比——flex&quot;">​</a></h2><p>使用flex属性修改弹性盒子伸缩比</p><ul><li><p>属性</p><ul><li>flex：值；</li></ul></li><li><p>取值分类</p><ul><li>数值（整数）</li></ul></li></ul><h2 id="主轴方向——flex-direction" tabindex="-1">主轴方向——flex-direction <a class="header-anchor" href="#主轴方向——flex-direction" aria-label="Permalink to &quot;主轴方向——flex-direction&quot;">​</a></h2><p>使用flex-direction改变元素排列方向</p><ul><li>主轴默认是水平方向, 侧轴默认是垂直方向</li><li>修改主轴方向属性: flex-direction</li></ul><table><thead><tr><th style="text-align:center;">属性值</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">row</td><td style="text-align:center;">行, 水平(默认值）</td></tr><tr><td style="text-align:center;">column</td><td style="text-align:center;">* 列, 垂直</td></tr><tr><td style="text-align:center;">row-reverse</td><td style="text-align:center;">行, 从右向左</td></tr><tr><td style="text-align:center;">column-reverse</td><td style="text-align:center;">列, 从下向上</td></tr></tbody></table><p>主轴更换后，justify-content变成垂直居中，align-items变成水平居中</p><h2 id="弹性盒子换行" tabindex="-1">弹性盒子换行 <a class="header-anchor" href="#弹性盒子换行" aria-label="Permalink to &quot;弹性盒子换行&quot;">​</a></h2><p>使用flex-wrap实现弹性盒子多行排列效果</p><table><thead><tr><th style="text-align:center;">属性</th><th style="text-align:center;">作用</th></tr></thead><tbody><tr><td style="text-align:center;">nowrap</td><td style="text-align:center;">默认值。规定灵活的项目不拆行或不拆列。</td></tr><tr><td style="text-align:center;">wrap</td><td style="text-align:center;">规定灵活的项目在必要的时候拆行或拆列。</td></tr><tr><td style="text-align:center;">wrap-reverse</td><td style="text-align:center;">规定灵活的项目在必要的时候拆行或拆列，但是以相反的顺序。</td></tr><tr><td style="text-align:center;">initial</td><td style="text-align:center;">设置该属性为它的默认值</td></tr><tr><td style="text-align:center;">inherit</td><td style="text-align:center;">从父元素继承该属性</td></tr></tbody></table><ul><li><p>弹性盒子换行显示：</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">flex-wrap</span><span style="color:#A6ACCD;">：wrap；</span></span></code></pre></div></li><li><p>调整对齐方式</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">align-content</span><span style="color:#A6ACCD;">：；</span></span>
<span class="line"><span style="color:#A6ACCD;">取值与justify-content基本相同</span></span></code></pre></div></li></ul>`,38),r=[i];function c(d,o,p,x,g,h){return e(),l("div",null,r)}const f=t(s,[["render",c]]);export{u as __pageData,f as default};
