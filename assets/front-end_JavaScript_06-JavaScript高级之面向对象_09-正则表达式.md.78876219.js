import{_ as n,o as l,c as p,V as a,z as s}from"./chunks/framework.7cbf217e.js";const h=JSON.parse('{"title":"正则表达式","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/JavaScript/06-JavaScript高级之面向对象/09-正则表达式.md","filePath":"front-end/JavaScript/06-JavaScript高级之面向对象/09-正则表达式.md","lastUpdated":1683117492000}'),o={name:"front-end/JavaScript/06-JavaScript高级之面向对象/09-正则表达式.md"},e=a(`<h1 id="正则表达式" tabindex="-1">正则表达式 <a class="header-anchor" href="#正则表达式" aria-label="Permalink to &quot;正则表达式&quot;">​</a></h1><h2 id="正则表达式概述" tabindex="-1">正则表达式概述 <a class="header-anchor" href="#正则表达式概述" aria-label="Permalink to &quot;正则表达式概述&quot;">​</a></h2><h3 id="什么是正则表达式" tabindex="-1">什么是正则表达式 <a class="header-anchor" href="#什么是正则表达式" aria-label="Permalink to &quot;什么是正则表达式&quot;">​</a></h3><p>**正则表达式(Regular Expression)**是用于匹配字符串中字符组合.在JavaScript中,正则表达式也是对象.</p><p>正则表通常被用来检索,替换那些符合某个模式(规则)的文本,例如验证表单:用户名表单只能输入英文字母,数字或者下划线,昵称输入框中可以输入中文(<strong>匹配</strong>).此外,正则表达式还常用于过滤掉页面内容中的一些敏感词(<strong>替换</strong>),或者从字符串中获取我们想要的特定部分(<strong>提取</strong>)等</p><h3 id="正则表达式的特点" tabindex="-1">正则表达式的特点 <a class="header-anchor" href="#正则表达式的特点" aria-label="Permalink to &quot;正则表达式的特点&quot;">​</a></h3><ol><li>灵活性,逻辑性和功能性非常强</li><li>可以迅速地用极简单的方式达到字符串的复杂控制</li><li>对于刚接触的人来说,比较晦涩难懂.比如:^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)*.\\w+([-.]\\w+)*$</li><li>实际开发,一般都是直接复制写好的正则表达式.但是要求会使用正则表达式并且根据实际情况修改正则表达式.比如用户名:/^[a-z0-9_-]{3,16}$/</li></ol><h2 id="正则表达式在javascript中的使用" tabindex="-1">正则表达式在JavaScript中的使用 <a class="header-anchor" href="#正则表达式在javascript中的使用" aria-label="Permalink to &quot;正则表达式在JavaScript中的使用&quot;">​</a></h2><h3 id="创建正则表达式" tabindex="-1">创建正则表达式 <a class="header-anchor" href="#创建正则表达式" aria-label="Permalink to &quot;创建正则表达式&quot;">​</a></h3><p>在JavaScript中,可以通过两种方式创建一个正则表达式</p><ol><li><strong>通过调用RegExp对象的构造函数创建</strong></li></ol><blockquote><p>var 变量名 =new RegExp(/表达式/);</p></blockquote><ol start="2"><li><strong>通过字面量创建</strong></li></ol><blockquote><p>var 变量名 =/表达式/;</p></blockquote><h3 id="测试正则表达式test" tabindex="-1">测试正则表达式test <a class="header-anchor" href="#测试正则表达式test" aria-label="Permalink to &quot;测试正则表达式test&quot;">​</a></h3><p>test()正则对象方法,用于检测字符串是否符合该规则,该对象会返回true或false,其参数是测试字符串</p><blockquote><p>regexObj.test(str)</p></blockquote><ul><li>regexObj是写的正则表达式</li><li>str我们要检测的文本</li><li>就是检测str文本是否符合我们写的正则表达式规范</li></ul><h3 id="正则表达式的组成" tabindex="-1">正则表达式的组成 <a class="header-anchor" href="#正则表达式的组成" aria-label="Permalink to &quot;正则表达式的组成&quot;">​</a></h3><p>一个正则表达式可以<strong>由简单的字符构成</strong>,比如/abc/,<strong>也可以是简单和特殊字符的组合</strong>,比如/ab*c/.其中特殊字符也被称为<strong>元字符</strong>,在正则表达式中是具有特殊意义的专用符号,如^,$,+等</p><p>特殊字符非常多,可以参考:</p><ul><li>MDN:<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Regular_Expressions" target="_blank" rel="noreferrer">正则表达式 - JavaScript | MDN (mozilla.org)</a></li><li>jQuery:正则表达式部分</li><li>正则测试工具:<a href="https://tool.oschina.net/regex" target="_blank" rel="noreferrer">在线正则表达式测试 (oschina.net)</a></li></ul><h4 id="边界符" tabindex="-1">边界符 <a class="header-anchor" href="#边界符" aria-label="Permalink to &quot;边界符&quot;">​</a></h4><p>正则表达式中的边界符(位置符)用来<strong>提供字符所处的位置</strong>,主要有两个字符</p><table><thead><tr><th style="text-align:center;">边界符</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">^</td><td style="text-align:center;">表示匹配行首的文本(以谁开始)</td></tr><tr><td style="text-align:center;">$</td><td style="text-align:center;">表示匹配行尾的文本(以谁结束)</td></tr></tbody></table><p>如果^ 和 $ 在一起，表示必须是精确匹配</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 边界符 ^ $</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> rg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">//正则表达式里面不需要加引号，不管是数字型还是字符串型</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// /abc/只要包含有abc这个字符串返回的都是true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(rg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(rg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abcd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(rg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aabcd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">//true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">abcd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">	</span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">aabcd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">))</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> reg1 </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 以abc开头，以abc结尾，必须是abc</span></span></code></pre></div><h4 id="字符类" tabindex="-1">字符类 <a class="header-anchor" href="#字符类" aria-label="Permalink to &quot;字符类&quot;">​</a></h4><ul><li>字符类表示有一系列字符可供选择，只要匹配其中一个就可以了</li><li>所有可供选择的字符都放在方括号内</li></ul><h5 id="方括号-多选一" tabindex="-1">[]方括号(多选一) <a class="header-anchor" href="#方括号-多选一" aria-label="Permalink to &quot;[]方括号(多选一)&quot;">​</a></h5><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/[</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">]/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">andy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">     </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><p>后面的字符串只要包含 <code>abc</code> 中任意一个字符,都返回<code>true</code></p><h5 id="方括号内部-范围符" tabindex="-1">[-]方括号内部 范围符 <a class="header-anchor" href="#方括号内部-范围符" aria-label="Permalink to &quot;[-]方括号内部 范围符&quot;">​</a></h5><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">a-z</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">()</span></span></code></pre></div><p>方括号内部加上 <strong>-</strong> 表示<strong>范围</strong>，这里表示 <strong>a-z</strong> 26个英文字母都可以</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">//例如</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">a-zA-Z0-9_-</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;">//只能输入26个字母和数字</span></span></code></pre></div><p>如果中括号里面有^,表示取反的意思 千万别和边界符^混淆</p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        //var rg = /abc/;  只要包含abc就可以 </span></span>
<span class="line"><span style="color:#A6ACCD;">        // 字符类: [] 表示有一系列字符可供选择，只要匹配其中一个就可以了</span></span>
<span class="line"><span style="color:#A6ACCD;">        var rg = /[abc]/; // 只要包含有a 或者 包含有b 或者包含有c 都返回为true</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(rg.test(&#39;andy&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(rg.test(&#39;baby&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(rg.test(&#39;color&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(rg.test(&#39;red&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        var rg1 = /^[abc]$/; // 三选一 只有是a 或者是 b  或者是c 这三个字母才返回 true</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(rg1.test(&#39;aa&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(rg1.test(&#39;a&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(rg1.test(&#39;b&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(rg1.test(&#39;c&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(rg1.test(&#39;abc&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(&#39;------------------&#39;);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        var reg = /^[a-z]$/; // 26个英文字母任何一个字母返回 true  - 表示的是a 到z 的范围  </span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;a&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;z&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(1));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;A&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 字符组合</span></span>
<span class="line"><span style="color:#A6ACCD;">        var reg1 = /^[a-zA-Z0-9_-]$/; // 26个英文字母(大写和小写都可以)任何一个字母返回 true  </span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg1.test(&#39;a&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg1.test(&#39;B&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg1.test(8));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg1.test(&#39;-&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg1.test(&#39;_&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg1.test(&#39;!&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(&#39;----------------&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 如果中括号里面有^ 表示取反的意思 千万和 我们边界符 ^ 别混淆</span></span>
<span class="line"><span style="color:#A6ACCD;">        var reg2 = /^[^a-zA-Z0-9_-]$/;</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg2.test(&#39;a&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg2.test(&#39;B&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg2.test(8));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg2.test(&#39;-&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg2.test(&#39;_&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg2.test(&#39;!&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="量词符" tabindex="-1">量词符 <a class="header-anchor" href="#量词符" aria-label="Permalink to &quot;量词符&quot;">​</a></h4><p>量词符用来设定某个模式出现的次数</p>`,40),t=s("table",null,[s("thead",null,[s("tr",null,[s("th",{style:{"text-align":"center"}},"量词"),s("th",{style:{"text-align":"center"}},"说明")])]),s("tbody",null,[s("tr",null,[s("td",{style:{"text-align":"center"}},"*"),s("td",{style:{"text-align":"center"}},"重复零次或更多次")]),s("tr",null,[s("td",{style:{"text-align":"center"}},"+"),s("td",{style:{"text-align":"center"}},"重复一次或更多次")]),s("tr",null,[s("td",{style:{"text-align":"center"}},"?"),s("td",{style:{"text-align":"center"}},"重复零次或一次")]),s("tr",null,[s("td",{style:{"text-align":"center"},n:""}),s("td",{style:{"text-align":"center"}},"重复n次")]),s("tr",null,[s("td",{style:{"text-align":"center"},"n,":""}),s("td",{style:{"text-align":"center"}},"重复n次或更多次")]),s("tr",null,[s("td",{style:{"text-align":"center"},"n,m":""}),s("td",{style:{"text-align":"center"}},"重复n到m次")])])],-1),c=a(`<div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 量词符: 用来设定某个模式出现的次数</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 简单理解: 就是让下面的a这个字符重复多少次</span></span>
<span class="line"><span style="color:#A6ACCD;">        // var reg = /^a$/;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        //  * 相当于 &gt;= 0 可以出现0次或者很多次 </span></span>
<span class="line"><span style="color:#A6ACCD;">        // var reg = /^a*$/;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;a&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;aaaa&#39;));</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        //  + 相当于 &gt;= 1 可以出现1次或者很多次</span></span>
<span class="line"><span style="color:#A6ACCD;">        // var reg = /^a+$/;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;&#39;)); // false</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;a&#39;)); // true</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;aaaa&#39;)); // true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        //  ?  相当于 1 || 0</span></span>
<span class="line"><span style="color:#A6ACCD;">        // var reg = /^a?$/;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;&#39;)); // true</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;a&#39;)); // true</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;aaaa&#39;)); // false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">        //  </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> 就是重复3次</span></span>
<span class="line"><span style="color:#A6ACCD;">        // var reg = /^a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">$/;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;&#39;)); // false</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;a&#39;)); // false</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;aaaa&#39;)); // false</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;aaa&#39;)); // true</span></span>
<span class="line"><span style="color:#A6ACCD;">        //  </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  大于等于3</span></span>
<span class="line"><span style="color:#A6ACCD;">        var reg = /^a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,}</span><span style="color:#A6ACCD;">$/;</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;&#39;)); // false</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;a&#39;)); // false</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;aaaa&#39;)); // true</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;aaa&#39;)); // true</span></span>
<span class="line"><span style="color:#A6ACCD;">        //  </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  大于等于3 并且 小于等于16</span></span>
<span class="line"><span style="color:#A6ACCD;">        var reg = /^a</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">$/;</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;&#39;)); // false</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;a&#39;)); // false</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;aaaa&#39;)); // true</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;aaa&#39;)); // true</span></span>
<span class="line"><span style="color:#A6ACCD;">        console.log(reg.test(&#39;aaaaaaa&#39;)); // false</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h4 id="界符和" tabindex="-1">界符和[] <a class="header-anchor" href="#界符和" aria-label="Permalink to &quot;界符和[]&quot;">​</a></h4><p>只能多选1</p><h3 id="用户验证" tabindex="-1">用户验证 <a class="header-anchor" href="#用户验证" aria-label="Permalink to &quot;用户验证&quot;">​</a></h3><p>功能需求：</p><ol><li>如果用户名输入合法, 则后面提示信息为 : 用户名合法,并且颜色为绿色</li><li>如果用户名输入不合法, 则后面提示信息为: 用户名不符合规范, 并且颜色为绿色</li></ol><p>分析：</p><ol><li><p>用户名只能为英文字母,数字,下划线或者短横线组成, 并且用户名长度为 6~16位.</p></li><li><p>首先准备好这种正则表达式模式 /$[a-zA-Z0-9-_]{6,16}^/</p></li><li><p>当表单失去焦点就开始验证.</p></li><li><p>如果符合正则规范, 则让后面的span标签添加 right 类.</p></li><li><p>如果不符合正则规范, 则让后面的span标签添加 wrong 类.</p></li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">input</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">type</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">text</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">uname</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">请输入用户名</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">span</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        //  量词是设定某个模式出现的次数</span></span>
<span class="line"><span style="color:#A6ACCD;">        var reg = /^[a-zA-Z0-9_-]</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">$/; // 这个模式用户只能输入英文字母 数字 下划线 短横线但是有边界符和[] 这就限定了只能多选1</span></span>
<span class="line"><span style="color:#A6ACCD;">        // </span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">6</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">16</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">  中间不要有空格</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;a&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;8&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;18&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;aa&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(&#39;-------------&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;andy-red&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;andy_red&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;andy007&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        // console.log(reg.test(&#39;andy!007&#39;));</span></span>
<span class="line"><span style="color:#A6ACCD;">        var uname = document.querySelector(&#39;.uname&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        var span = document.querySelector(&#39;span&#39;);</span></span>
<span class="line"><span style="color:#A6ACCD;">        uname.onblur = function() </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#82AAFF;">if</span><span style="color:#A6ACCD;"> (reg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">test</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">this.</span><span style="color:#A6ACCD;">value)) </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">                console.log(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">正确的</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">                span.className = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">right</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">                span.innerHTML = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">用户名格式输入正确</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">            } else {</span></span>
<span class="line"><span style="color:#F07178;">                console.log(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">错误的</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">);</span></span>
<span class="line"><span style="color:#F07178;">                span.className = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">wrong</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">                span.innerHTML = </span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">用户名格式输入不正确</span><span style="color:#89DDFF;">&#39;</span><span style="color:#F07178;">;</span></span>
<span class="line"><span style="color:#F07178;">            }</span></span>
<span class="line"><span style="color:#F07178;">        }</span></span>
<span class="line"><span style="color:#F07178;">    &lt;/script&gt;</span></span>
<span class="line"><span style="color:#F07178;">&lt;/body&gt;</span></span></code></pre></div><h3 id="括号总结" tabindex="-1">括号总结 <a class="header-anchor" href="#括号总结" aria-label="Permalink to &quot;括号总结&quot;">​</a></h3><ol><li>大括号 量词符 里面面表示重复次数</li><li>中括号 字符集合 匹配方括号中的任意字符</li><li>小括号 表示优先级</li></ol><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 中括号 字符集合 匹配方括号中的任意字符</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">[</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">]</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// a || b || c</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 大括号 量词符 里面表示重复次数</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">{3}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">   </span><span style="color:#676E95;font-style:italic;">// 它只是让c 重复3次 abccc</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 小括号 表示优先级</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> reg </span><span style="color:#89DDFF;">=</span><span style="color:#C3E88D;"> </span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;font-style:italic;">^</span><span style="color:#89DDFF;">(</span><span style="color:#C3E88D;">abc</span><span style="color:#89DDFF;">){3}</span><span style="color:#89DDFF;font-style:italic;">$</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//它是让 abc 重复3次</span></span></code></pre></div><p>在线测试正则表达式：<a href="https://c.runoob.com/" target="_blank" rel="noreferrer">https://c.runoob.com/</a></p><h3 id="预定义类" tabindex="-1">预定义类 <a class="header-anchor" href="#预定义类" aria-label="Permalink to &quot;预定义类&quot;">​</a></h3><p>预定义类指的是 某些常见模式的简写写法</p><table><thead><tr><th style="text-align:center;">预定类</th><th style="text-align:center;">说明</th></tr></thead><tbody><tr><td style="text-align:center;">\\d</td><td style="text-align:center;">匹配0-9之间的任一数字，相当于[0-9]</td></tr><tr><td style="text-align:center;">\\D</td><td style="text-align:center;">匹配所有0-9以外的字符，相当于[ ^ 0-9]</td></tr><tr><td style="text-align:center;">\\w</td><td style="text-align:center;">匹配任意的字母、数字和下划线,相当于[A-Za-z0-9_ ]</td></tr><tr><td style="text-align:center;">\\W</td><td style="text-align:center;">除所有字母、数字、和下划线以外的字符，相当于[ ^A-Za-z0-9_ ]</td></tr><tr><td style="text-align:center;">\\s</td><td style="text-align:center;">匹配空格（包括换行符，制表符，空格符等），相当于[\\t\\t\\n\\v\\f]</td></tr><tr><td style="text-align:center;">\\S</td><td style="text-align:center;">匹配非空格的字符，相当于[ ^ \\t\\r\\n\\v\\f]</td></tr></tbody></table><h4 id="表单验证" tabindex="-1">表单验证 <a class="header-anchor" href="#表单验证" aria-label="Permalink to &quot;表单验证&quot;">​</a></h4><p>分析：</p><p>1.手机号码: <code>/^1[3|4|5|7|8][0-9]{9}$/</code></p><p>2.QQ: <code>[1-9][0-9]{4,}</code> (腾讯QQ号从10000开始)</p><p>3.昵称是中文: <code>^[\\u4e00-\\u9fa5]{2,8}$</code></p><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 座机号码验证:  全国座机号码  两种格式:   010-12345678  或者  0530-1234567</span></span>
<span class="line"><span style="color:#A6ACCD;">        // 正则里面的或者 符号  |  </span></span>
<span class="line"><span style="color:#A6ACCD;">        // var reg = /^\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">-\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">|\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">-\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">$/;</span></span>
<span class="line"><span style="color:#A6ACCD;">        var reg = /^\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">3</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">-\\d</span><span style="color:#89DDFF;">{</span><span style="color:#F78C6C;">7</span><span style="color:#89DDFF;">,</span><span style="color:#F78C6C;">8</span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">$/;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">body</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h3 id="正则表达式替换replace" tabindex="-1">正则表达式替换replace() <a class="header-anchor" href="#正则表达式替换replace" aria-label="Permalink to &quot;正则表达式替换replace()&quot;">​</a></h3><p>replace()方法可以实现替换字符串操作，用来替换的参数可以是一个字符串或是一个正则表达式</p><blockquote><p>stringObject.replace(regexp/substr,replacement)</p><ul><li>第一个参数是被替换的字符串</li><li>第二个参数的替换成的字符串</li><li>返回替换完毕的字符串</li></ul></blockquote><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 替换 replace</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> str </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">andy和red</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> newStr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">andy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">baby</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> newStr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> str</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">replace</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">andy</span><span style="color:#89DDFF;">/</span><span style="color:#89DDFF;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">baby</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="正则表达式参数" tabindex="-1">正则表达式参数 <a class="header-anchor" href="#正则表达式参数" aria-label="Permalink to &quot;正则表达式参数&quot;">​</a></h3><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">/</span><span style="color:#C3E88D;">表达式</span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;">[switch]</span></span></code></pre></div><p><code>switch</code>按照什么样的模式来匹配，有三种</p><ul><li><code>g</code>: 全局匹配</li><li><code>i</code>:忽略大小写</li><li><code>gi</code>: 全局匹配 + 忽略大小写</li></ul>`,30),r=[e,t,c];function y(D,i,F,C,A,g){return l(),p("div",null,r)}const u=n(o,[["render",y]]);export{h as __pageData,u as default};
