import{_ as o,o as t,c as r,z as e,a as s}from"./chunks/framework.7cbf217e.js";const E=JSON.parse('{"title":"promise(重点)","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/JavaScript/07-ES6~ES11/ES6/14-promise（重点）.md","filePath":"front-end/JavaScript/07-ES6~ES11/ES6/14-promise（重点）.md","lastUpdated":1683117492000}'),a={name:"front-end/JavaScript/07-ES6~ES11/ES6/14-promise（重点）.md"},i=e("h1",{id:"promise-重点",tabindex:"-1"},[s("promise(重点) "),e("a",{class:"header-anchor",href:"#promise-重点","aria-label":'Permalink to "promise(重点)"'},"​")],-1),n=e("p",null,"Promise 是 ES6 引入的异步编程的新解决方案。语法上 Promise 是一个构造函数， 用来封装异步操作并可以获取其成功或失败的结果。",-1),p=e("ol",null,[e("li",null,"promise构造函数:promise(excutor){}"),e("li",null,"promise.prototype.then方法"),e("li",null,"promise.prototype.catch方法")],-1),c=[i,n,p];function l(m,d,_,h,S,f){return t(),r("div",null,c)}const x=o(a,[["render",l]]);export{E as __pageData,x as default};
