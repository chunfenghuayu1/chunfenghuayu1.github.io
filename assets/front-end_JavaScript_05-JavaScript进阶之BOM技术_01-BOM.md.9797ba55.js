import{_ as s,o as a,c as n,V as t}from"./chunks/framework.7cbf217e.js";const l="/assets/image-20230415022303647.5d7e28dd.png",C=JSON.parse('{"title":"BOM","description":"","frontmatter":{},"headers":[],"relativePath":"front-end/JavaScript/05-JavaScript进阶之BOM技术/01-BOM.md","filePath":"front-end/JavaScript/05-JavaScript进阶之BOM技术/01-BOM.md","lastUpdated":1683117492000}'),e={name:"front-end/JavaScript/05-JavaScript进阶之BOM技术/01-BOM.md"},o=t('<h1 id="bom" tabindex="-1">BOM <a class="header-anchor" href="#bom" aria-label="Permalink to &quot;BOM&quot;">​</a></h1><h2 id="bom概述" tabindex="-1">BOM概述 <a class="header-anchor" href="#bom概述" aria-label="Permalink to &quot;BOM概述&quot;">​</a></h2><p>BOM = Browser Object Model 👉浏览器对象模型 它提供了独立于内容而与浏览器窗口进行交互的对象，其核心对象是 window BOM 由一系列相关的对象构成，并且每个对象都提供了很多方法与属性 BOM 缺乏标准，JavaScript 语法的标准化组织是 ECMA, DOM 的标准化组织是 W3C, BOM最初是Netscape 浏览器标准的一部分</p><table><thead><tr><th style="text-align:center;">DOM</th><th style="text-align:center;">BOM</th></tr></thead><tbody><tr><td style="text-align:center;">文档对象模型</td><td style="text-align:center;">浏览器对象模型</td></tr><tr><td style="text-align:center;">DOM就是把文档当作一个对象看待</td><td style="text-align:center;">把 浏览器当作一个对象来看待</td></tr><tr><td style="text-align:center;">DOM的顶级对象是document</td><td style="text-align:center;">BOM 的顶级对象是 window</td></tr><tr><td style="text-align:center;">DOM主要学习的是操作页面元素</td><td style="text-align:center;">BOM 学习的是浏览器窗口交互的一些对象</td></tr><tr><td style="text-align:center;">DOM是W3C标准规范</td><td style="text-align:center;">BOM 是浏览器厂商在各自浏览器上定义的，兼容性较差</td></tr></tbody></table><h2 id="bom构成" tabindex="-1">BOM构成 <a class="header-anchor" href="#bom构成" aria-label="Permalink to &quot;BOM构成&quot;">​</a></h2><p><img src="'+l+`" alt="image-20230415022303647"></p><ul><li><p>BOM 比 DOM 更大。它包含 DOM。</p></li><li><p><strong>window 对象是浏览器的顶级对象，它具有双重角色</strong></p></li><li><p>它是 JS 访问浏览器窗口的一个接口</p></li><li><p>它是一个全局对象。定义在全局作用域中的变量、函数都会变成 window 对象的属性和方法</p></li><li><p>在调用的时候可以省略 window，前面学习的对话框都属于 window 对象方法，如 alert()、prompt()等。</p></li><li><p>注意：window下的一个特殊属性 window.name</p></li></ul><div class="language-javascript"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">// 定义在全局作用域中的变量会变成window对象的属性</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> num </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">num)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 10</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 定义在全局作用域中的函数会变成window对象的方法</span></span>
<span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#F07178;">(</span><span style="color:#F78C6C;">11</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">fn</span><span style="color:#A6ACCD;">()</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 11</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">//不要用这个name变量,window下有一个特殊属性window.name</span></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">num)</span><span style="color:#89DDFF;">;</span></span></code></pre></div>`,8),p=[o];function r(c,i,d,y,D,F){return a(),n("div",null,p)}const m=s(e,[["render",r]]);export{C as __pageData,m as default};
